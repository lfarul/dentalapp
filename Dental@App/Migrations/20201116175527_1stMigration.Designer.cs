// <auto-generated />
using System;
using Dental_App.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dental_App.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201116175527_1stMigration")]
    partial class _1stMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Dental_App.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Dental_App.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            Email = "kkowalski@klinika",
                            FirstName = "Konrad",
                            LastName = "Kowalski",
                            Specialty = "Stomatolog"
                        },
                        new
                        {
                            EmployeeID = 2,
                            Email = "anowak@klinika",
                            FirstName = "Agata",
                            LastName = "Nowak",
                            Specialty = "Ortodonta"
                        },
                        new
                        {
                            EmployeeID = 3,
                            Email = "jkujawski@klinika",
                            FirstName = "Jan",
                            LastName = "Kujawski",
                            Specialty = "Chirurg szczękowy"
                        },
                        new
                        {
                            EmployeeID = 4,
                            Email = "dborowicz@klinika",
                            FirstName = "Damian",
                            LastName = "Borowicz",
                            Specialty = "Stomatolog"
                        },
                        new
                        {
                            EmployeeID = 5,
                            Email = "kzawadzka@klinika",
                            FirstName = "Karolina",
                            LastName = "Zawadzka",
                            Specialty = "Stomatolog"
                        });
                });

            modelBuilder.Entity("Dental_App.Models.Appointment", b =>
                {
                    b.HasOne("Dental_App.Models.Employee", "Employee")
                        .WithMany("Appointments")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dental_App.Models.Employee", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
